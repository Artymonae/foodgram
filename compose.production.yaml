name: foodgram

services:
  frontend:
    image: artymonae/foodgram_frontend:latest
    volumes:
      - ./frontend/:/app/result_build/

  backend:
    image: artymonae/foodgram_backend:latest
    container_name: foodgram_backend
    hostname: foodgram_backend
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-foodgram}
      - POSTGRES_USER=${POSTGRES_USER:-foodgram_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-foodgram_pass}
      - POSTGRES_HOST=foodgram_postgres
      - POSTGRES_PORT=5432
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-default_secret_key}
      - DJANGO_DEBUG=${DJANGO_DEBUG:-False}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-localhost,127.0.0.1}
      - DJANGO_CSRF_TRUSTED_ORIGINS=${DJANGO_CSRF_TRUSTED_ORIGINS}
    volumes:
      - static_data:/app/static/
      - media_data:/app/media/
    expose:
      - "8000"
    depends_on:
      - postgres

  postgres:
    image: postgres:16
    container_name: foodgram_postgres
    hostname: foodgram_postgres
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-foodgram}
      - POSTGRES_USER=${POSTGRES_USER:-foodgram_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-foodgram_pass}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5
  
  nginx:
    container_name: foodgram_proxy
    hostname: foodgram_proxy
    image: nginx:1.25.4-alpine
    ports:
      - "7777:80"
    volumes:
      - ./infra/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_data:/vol/static
      - media_data:/vol/media
    depends_on:
      - backend
      - frontend

volumes:
  static_data:
  media_data:
  postgres_data:
