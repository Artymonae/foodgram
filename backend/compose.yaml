services:
  backend:
    container_name: foodgram_backend
    hostname: foodgram_backend
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-foodgram}
      - POSTGRES_USER=${POSTGRES_USER:-foodgram_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-foodgram_pass}
      - POSTGRES_HOST=foodgram_postgres
      - POSTGRES_PORT=5432
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-default_secret_key}
      - DJANGO_DEBUG=${DJANGO_DEBUG:-False}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-localhost,127.0.0.1}
      - DJANGO_CSRF_TRUSTED_ORIGINS=${DJANGO_CSRF_TRUSTED_ORIGINS}
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - static_data:/app/static/
      - media_data:/app/media/
    expose:
      - "8000"

  postgres:
    image: postgres:16
    container_name: foodgram_postgres
    hostname: foodgram_postgres
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-foodgram}
      - POSTGRES_USER=${POSTGRES_USER:-foodgram_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-foodgram_pass}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5

  phppgadmin:
    image: dpage/pgadmin4:9.1.0
    container_name: foodgram_phppgadmin
    hostname: foodgram_phppgadmin
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-admin}
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:80/misc/ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  static_data:
  media_data:
  postgres_data:
  pgadmin_data:
